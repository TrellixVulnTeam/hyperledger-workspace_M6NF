{
  "_args": [
    [
      {
        "raw": "plantuml-encoder@^1.2.4",
        "scope": null,
        "escapedName": "plantuml-encoder",
        "name": "plantuml-encoder",
        "rawSpec": "^1.2.4",
        "spec": ">=1.2.4 <2.0.0",
        "type": "range"
      },
      "/home/gunungmerapi/wajid-projects/hyperledger-workspace/taxtime-quick-biz-loans-api/node_modules/node-plantuml"
    ]
  ],
  "_from": "plantuml-encoder@>=1.2.4 <2.0.0",
  "_id": "plantuml-encoder@1.2.4",
  "_inCache": true,
  "_location": "/plantuml-encoder",
  "_nodeVersion": "4.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/plantuml-encoder-1.2.4.tgz_1474721240156_0.6257289277855307"
  },
  "_npmUser": {
    "name": "markushedvall",
    "email": "mackanhedvall@gmail.com"
  },
  "_npmVersion": "2.14.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "plantuml-encoder@^1.2.4",
    "scope": null,
    "escapedName": "plantuml-encoder",
    "name": "plantuml-encoder",
    "rawSpec": "^1.2.4",
    "spec": ">=1.2.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/node-plantuml"
  ],
  "_resolved": "https://registry.npmjs.org/plantuml-encoder/-/plantuml-encoder-1.2.4.tgz",
  "_shasum": "5f0056f7c04bd76aeef420bfcddef339e9f44081",
  "_shrinkwrap": null,
  "_spec": "plantuml-encoder@^1.2.4",
  "_where": "/home/gunungmerapi/wajid-projects/hyperledger-workspace/taxtime-quick-biz-loans-api/node_modules/node-plantuml",
  "author": {
    "name": "Markus Hedvall",
    "email": "mackanhedvall@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/markushedvall/plantuml-encoder/issues"
  },
  "dependencies": {
    "pako": "1.0.3",
    "utf8-bytes": "0.0.1"
  },
  "description": "PlantUML encoder for browsers and Node.js",
  "devDependencies": {
    "browserify": "^13.1.0",
    "chai": "^3.2.0",
    "mocha": "^2.2.5",
    "standard": "^4.5.4",
    "uglify-js": "^2.7.3"
  },
  "directories": {},
  "dist": {
    "shasum": "5f0056f7c04bd76aeef420bfcddef339e9f44081",
    "tarball": "https://registry.npmjs.org/plantuml-encoder/-/plantuml-encoder-1.2.4.tgz"
  },
  "gitHead": "aae868f9e2a31a5e18bc7fecf4fbd5424dc86cac",
  "homepage": "https://github.com/markushedvall/plantuml-encoder#readme",
  "keywords": [
    "plantuml",
    "encoder"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "markushedvall",
      "email": "mackanhedvall@gmail.com"
    }
  ],
  "name": "plantuml-encoder",
  "optionalDependencies": {},
  "readme": "# plantuml-encoder\nPlantUML encoder for browsers and Node.js.\n\n[![npm Version](https://img.shields.io/npm/v/plantuml-encoder.svg)](https://www.npmjs.com/package/plantuml-encoder) [![build-status](https://travis-ci.org/markushedvall/plantuml-encoder.svg?branch=master)](https://travis-ci.org/markushedvall/plantuml-encoder) [![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\nEncoded PlantUML can be used to create PlantUML URL links.\n\n# Install\n\nNode.js:\n\n```\nnpm install plantuml-encoder\n```\n\nbrowser:\n\n```\nbower install plantuml-encoder\n```\n\n# Example\n\n```javascript\nvar plantumlEncoder = require('plantuml-encoder')\n\nvar encoded = plantumlEncoder.encode('A -> B: Hello')\nconsole.log(encoded) // UDfpLD2rKt2oKl18pSd91m0KGWDz\n\nvar url = 'http://www.plantuml.com/plantuml/img/' + encoded\n```\n\nThe URL can then be used to display the diagram:\n\n![alt tag](http://www.plantuml.com/plantuml/img/UDfpLD2rKt2oKl18pSd91m0KGWDz)\n\n# License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/markushedvall/plantuml-encoder.git"
  },
  "scripts": {
    "browserify": "browserify ./index.js --s plantumlEncoder -o dist/plantuml-encoder.js",
    "build": "npm run browserify && npm run uglify",
    "test": "standard && mocha",
    "uglify": "uglifyjs dist/plantuml-encoder.js -c -m -o dist/plantuml-encoder.min.js"
  },
  "standard": {
    "ignore": "dist/"
  },
  "version": "1.2.4"
}
