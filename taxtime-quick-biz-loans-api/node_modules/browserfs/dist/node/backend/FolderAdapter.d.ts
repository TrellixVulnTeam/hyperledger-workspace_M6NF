import { BaseFileSystem, FileSystem } from '../core/file_system';
import { ApiError } from '../core/api_error';
/**
 * The FolderAdapter file system wraps a file system, and scopes all interactions to a subfolder of that file system.
 */
export default class FolderAdapter extends BaseFileSystem implements FileSystem {
    static isAvailable(): boolean;
    _wrapped: FileSystem;
    _folder: string;
    /**
     * Wraps a file system, and uses the given folder as its root.
     *
     * Example: Given a file system `foo` with folder `bar` and file `bar/baz`...
     *
     * ```javascript
     * var adapter = new BrowserFS.FileSystem.FolderAdapter('bar', foo);
     * adapter.readdirSync('/'); // ['baz']
     * ```
     *
     * @param folder The folder to use as the root directory.
     * @param wrapped The file system to wrap.
     */
    constructor(folder: string, wrapped: FileSystem);
    /**
     * Initialize the file system. Ensures that the wrapped file system
     * has the given folder.
     */
    initialize(cb: (e?: ApiError) => void): void;
    getName(): string;
    isReadOnly(): boolean;
    supportsProps(): boolean;
    supportsSynch(): boolean;
    supportsLinks(): boolean;
}
